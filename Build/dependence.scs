dependence -> [*
	
	nrel_dependence 				<- sc_node_norole_relation;;
	concept_condition				<- sc_node_not_relation;;
	concept_relation				<- sc_node_not_relation;;
	concept_bynary_relation			<- sc_node_not_relation;;
	concept_transitive_relation		<- sc_node_not_relation;;
	concept_antireflective_relation	<- sc_node_not_relation;;
	concept_oriented_relation		<- sc_node_not_relation;;
	concept_asimmetric_relation		<- sc_node_not_relation;;
	nrel_first_domein				<- sc_node_norole_relation;;
	concept_task					<- sc_node_not_relation;;
	nrel_second_domain				<- sc_node_norole_relation;;
	nrel_defenition_scope			<- sc_node_norole_relation;;
	nrel_union						<- sc_node_norole_relation;;
	nrel_inclusion					<- sc_node_norole_relation;;
	rrel_sc_key_element				<-sc_node_role_relation;;

	... <- sc_statement;
		-> rrel_sc_key_element: nrel_dependence;
		=> concept_connected_set;
		=> nrel_main_idtf: [Утверждение 1. Зависимость](*<-lang_ru;;*);
		<= nrel_sc_text_translation: ...
			(*
				-> rrel_example: [Зависимость элемента связного множества от
								 одного или нескольких других элементов этого
								 множества является ключевым условием связности
								 множества.] (*<-lang_ru;;*);;
			*);;

	... <- sc_defenition;
	=> nrel_main_idtf:	[Определение (Зависимость*)](*<-lang_ru;;*);
	<= nrel_used_consts: {
		concept_relation;
		concept_condition;
		concept_connected_set
	};
	-> rrel_sc_key_element: nrel_dependence;
	<= nrel_sc_text_translation: ... 
		(*
			-> rrel_example: [Зависимость* - отношение (дуга) между элементами
							 множества, которое отражает, что одна из задач
							 является обязательным условием для выполнения
							 второй.] (*<-lang_ru;;*);;
		*);;
	
	nrel_dependance => nrel_main_idtf: [зависимость*] (*<-lang_ru;;*);
		=>nrel_main_idtf: [dependence*] (*<-lang_en;;*);
		=> nrel_sys_idtf: [nrel_dependance](*<-lang_en;;*);
		<- concept_oriented_relation;
		<- concept_antireflective_relation;
		<- concept_transitive_relation;
		<- concept_asimmetric_relation;
		=> nrel_first_domein: concept_task;;

	... <= nrel_second_domain: nrel_dependence;
		<= nrel_defenition_scope;
		<= nrel_union: {
			concept_condition;
			concept_task
		};;
	
	concept_bynary_relation => nrel_inclusion: concept_asimmetric_relation;
		=>nrel_inclusion: concept_transitive_relation;
		=>nrel_inclusion: concept_antireflective_relation;;

	concept_relation => nrel_inclusion: concept_oriented_relation;
		=>nrel_inclusion: concept_antireflective_relation;;

	
	

*];;
